<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.metain.web.mapper.HrMapper">

    <!--  로그인  -->
    <select id="login" resultType="Emp">
        SELECT TBL.EMP_ID, TBL.EMP_SABUN, TBL.EMP_PWD, TBL.EMP_NAME, TBL.EMP_DEPT,
               TBL.EMP_GRADE, TBL.EMP_BIRTH, TBL.EMP_PHONE, TBL.EMP_ADDR,
               TBL.EMP_ZIPCODE, TBL.EMP_DETAIL_ADDR, TBL.EMP_EMAIL, TBL.EMP_STATUS,
               TBL.EMP_FIRST_DT, TBL.EMP_LAST_DT, TBL.EMP_VAC
--                ,
--                TR.ROLE_NAME
        FROM TBL_EMPLOYEE TBL
--         INNER JOIN TBL_USER_ROLE TUR
--         ON TBL.EMP_ID = TUR.EMP_ID
--         INNER JOIN TBL_ROLE TR
--         ON TUR.ROLE_ID = TR.ROLE_ID
        WHERE EMP_SABUN = #{empSabun};
    </select>

    <!-- 권한 확인 -->
    <select id="selectRoleName"  resultType="String">
        SELECT TR.ROLE_NAME
        FROM TBL_EMPLOYEE TBL
        INNER JOIN TBL_USER_ROLE TUR
        ON TBL.EMP_ID = TUR.EMP_ID
        INNER JOIN TBL_ROLE TR
        ON TUR.ROLE_ID = TR.ROLE_ID
        WHERE TBL.EMP_SABUN = #{empSabun};
    </select>

    <!--  권한 저장   -->

    <insert id="userRoleSave"  parameterType="com.metain.web.domain.Emp">
        INSERT INTO TBL_USER_ROLE
        (
            EMP_ID,
            ROLE_ID
        )
        VALUES
            (
                #{empId},
                #{roleId}
            )
    </insert>

    <select id="findrolename" parameterType="com.metain.web.domain.NewEmp" resultType="String">
        select NEW_GRADE from TBL_NEW_EMPLOYEE where NEW_ID = #{newId};
    </select>

        <select id="findEmpNo" resultType="Integer">
            SELECT EMP_ID
            FROM TBL_EMPLOYEE
            WHERE EMP_SABUN = #{emp_sabun};
        </select>

        <select id="findRoleNo" resultType="Long">
            SELECT ROLE_ID
            FROM TBL_ROLE
            WHERE ROLE_NAME = #{newGrade};
        </select>





    <!--  신규 사원 등록  -->
        <insert id="insertNewEmp" parameterType="com.metain.web.domain.NewEmp">
            INSERT INTO TBL_NEW_EMPLOYEE
                (
                 NEW_NAME, NEW_PHONE, NEW_ADDR, NEW_ZIPCODE, NEW_DETAIL_ADDR,
                                          NEW_DEPT, NEW_BIRTH, NEW_GRADE, NEW_STATUS)
            VALUES (#{newName}, #{newPhone}, #{newAddr}, #{newZipcode}, #{newDetailAddr},
                    #{newDept}, #{newBirth}, #{newGrade}, 'ACTIVE')
        </insert>

        <!--  신입 사원 전체 목록  -->
        <select id="newEmpSelectAll" resultType="NewEmp">
            SELECT TNE.NEW_ID, TNE.NEW_NAME, TNE.NEW_PHONE,
--                    CONCAT(TNE.NEW_ADDR, ', ', TNE.NEW_DETAIL_ADDR, ', ', TNE.NEW_ZIPCODE) AS newAddrs,
                   TNE.NEW_ADDR, TNE.NEW_DETAIL_ADDR, TNE.NEW_ZIPCODE,
                   TNE.NEW_DEPT, TNE.NEW_BIRTH, TNE.NEW_GRADE, TNE.NEW_STATUS
            FROM TBL_NEW_EMPLOYEE TNE
        </select>

        <!--  전체 사원 목록  -->
        <select id="selectAll" resultType="Emp">
            SELECT TE.EMP_ID, TE.EMP_PHONE, TE.EMP_ADDR, TE.EMP_EMAIL,TE.EMP_SABUN,TE.EMP_BIRTH, TE.EMP_DEPT, TE.EMP_STATUS, TE.EMP_GRADE, TE.EMP_NAME, TE.EMP_FIRST_DT,TE.EMP_VAC, TE.EMP_PROFILE
            FROM TBL_EMPLOYEE TE
        </select>

        <!--   사원 정보 상세 보기   -->
        <select id="selectEmpInfo" resultType="Emp">
            SELECT *
            FROM TBL_EMPLOYEE
            WHERE EMP_ID=#{empId}
        </select>
        <!-- 신규직원 승인(신규직원 테이블에서 정보 삭제)-->
        <delete id="deleteNewEmp" parameterType="NewEmp">
            <foreach collection="newEmp" item="newEmpList" separator=";">
                DELETE FROM TBL_NEW_EMPLOYEE WHERE NEW_ID =#{newEmpList.newId}
            </foreach>
        </delete>


        <!--신규직원 승인(직원테이블에 정보 생성)-->


    <insert id="confirmEmp" parameterType="com.metain.web.domain.Emp">
        INSERT INTO TBL_EMPLOYEE (
            EMP_ID, EMP_NAME, EMP_PHONE, EMP_ADDR, EMP_ZIPCODE, EMP_DETAIL_ADDR,
            EMP_EMAIL, EMP_DEPT, EMP_FIRST_DT, EMP_SABUN, EMP_PWD, EMP_BIRTH,
            EMP_GRADE, EMP_STATUS, EMP_VAC
        )
        VALUES (
                   #{empId}, #{empName}, #{empPhone}, #{empAddr}, #{empZipcode}, #{empDetailAddr},
                   CONCAT(YEAR(NOW()), LPAD((SELECT IFNULL(MAX(EMP_ID), 0) + 1 FROM TBL_EMPLOYEE AS sb), 4, '0'), '@metain.com'), #{empDept}, DATE_FORMAT(NOW(), '%Y%m%d'),
                   CONCAT(YEAR(NOW()), LPAD((SELECT IFNULL(MAX(EMP_ID), 0) + 1 FROM TBL_EMPLOYEE AS sb), 4, '0')),
--                    CONCAT(YEAR(NOW()), LPAD((SELECT IFNULL(MAX(CAST(SUBSTR(EMP_SABUN, 5) AS UNSIGNED)), 0) + 1 FROM TBL_EMPLOYEE), 4, '0')),
                   #{empPwd}, #{empBirth}, #{empGrade}, #{empStatus}, '0'
               )
    </insert>
    <update id="updateEmp" parameterType="Emp">
        update TBL_EMPLOYEE
        set EMP_STATUS = #{empStatus} , EMP_GRADE= #{empGrade}, EMP_DEPT= #{empDept}, EMP_PROFILE = #{empProfile}
        where EMP_ID = #{empId}
    </update>

    <update id="annualUpdate" parameterType="Emp">
        update TBL_EMPLOYEE
        set EMP_VAC = #{empVac}
        where EMP_ID = #{empId}
    </update>

    <select id="newEmp" resultType="Emp">
        select EMP_ID, EMP_NAME, EMP_PHONE,EMP_EMAIL, EMP_DEPT, EMP_FIRST_DT, EMP_SABUN,EMP_VAC,EMP_PROFILE from TBL_EMPLOYEE WHERE MONTH(EMP_FIRST_DT) = MONTH(CURRENT_DATE()) AND YEAR(EMP_FIRST_DT) = YEAR(CURRENT_DATE()) order by EMP_FIRST_DT desc;
    </select>

</mapper>
